buffer:0
buffer:1000
D:\UCB\capstone\RL-for-Cost-Savings-DRL\Optimal-Energy-System-Scheduling-Combining-Mixed-Integer-Programming-and-Deep-Reinforcement-Learning\MIP_DQN.py:202: UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at ..\torch\csrc\utils\tensor_new.cpp:248.)
  states = torch.as_tensor((state,), dtype=torch.float32, device=self.device)
buffer:2000
buffer:3000
buffer:4000
buffer:5000
buffer:6000
buffer:7000
buffer:8000
buffer:9000
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
Traceback (most recent call last):
  File "D:\UCB\capstone\RL-for-Cost-Savings-DRL\Optimal-Energy-System-Scheduling-Combining-Mixed-Integer-Programming-and-Deep-Reinforcement-Learning\MIP_DQN.py", line 461, in <module>
    critic_loss, actor_loss = agent.update_net(buffer, batch_size, repeat_times, soft_update_tau)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\UCB\capstone\RL-for-Cost-Savings-DRL\Optimal-Energy-System-Scheduling-Combining-Mixed-Integer-Programming-and-Deep-Reinforcement-Learning\MIP_DQN.py", line 270, in update_net
    action_pg = self.act(state)  # policy gradient
                ^^^^^^^^^^^^^^^
  File "C:\Users\Georg\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\torch\nn\modules\module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\UCB\capstone\RL-for-Cost-Savings-DRL\Optimal-Energy-System-Scheduling-Combining-Mixed-Integer-Programming-and-Deep-Reinforcement-Learning\MIP_DQN.py", line 147, in forward
    x, _ = self.lstm3(x)
           ^^^^^^^^^^^^^
  File "C:\Users\Georg\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\torch\nn\modules\module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Georg\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\torch\nn\modules\rnn.py", line 812, in forward
    result = _VF.lstm(input, hx, self._flat_weights, self.bias, self.num_layers,
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])
-------------------------------
torch.Size([256, 4])